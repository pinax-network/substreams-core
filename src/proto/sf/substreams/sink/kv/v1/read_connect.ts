// @generated by protoc-gen-connect-es v0.8.6 with parameter "target=ts"
// @generated from file sf/substreams/sink/kv/v1/read.proto (package sf.substreams.sink.kv.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetByPrefixRequest, GetByPrefixResponse, GetManyRequest, GetManyResponse, GetRequest, GetResponse, ScanRequest, ScanResponse } from "./read_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service sf.substreams.sink.kv.v1.Kv
 */
export const Kv = {
  typeName: "sf.substreams.sink.kv.v1.Kv",
  methods: {
    /**
     * Get returns the requested value as bytes if it exists, grpc_error: NOT_FOUND otherwise.
     *
     * @generated from rpc sf.substreams.sink.kv.v1.Kv.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMany returns the requested values as bytes if all of them exists, grpc_error: NOT_FOUND otherwise.
     *
     * @generated from rpc sf.substreams.sink.kv.v1.Kv.GetMany
     */
    getMany: {
      name: "GetMany",
      I: GetManyRequest,
      O: GetManyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetByPrefix returns the next _limit_ key/value pair that match the requested prefix if any exist, grpc_error: NOT_FOUND otherwise.
     *
     * @generated from rpc sf.substreams.sink.kv.v1.Kv.GetByPrefix
     */
    getByPrefix: {
      name: "GetByPrefix",
      I: GetByPrefixRequest,
      O: GetByPrefixResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Scan returns then next _limit_ key/value pairs starting lexicographically at the given key, grpc_error: NOT_FOUND otherwise.
     *
     * @generated from rpc sf.substreams.sink.kv.v1.Kv.Scan
     */
    scan: {
      name: "Scan",
      I: ScanRequest,
      O: ScanResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

